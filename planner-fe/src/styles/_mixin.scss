@import '_variables.scss';

@mixin breakpoint-sm {
  @media (min-width: 568px) {
    @content;
  }
}

@mixin breakpoint-md {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin breakpoint-lg {
  @media (min-width: 900px) {
    @content;
  }
}

@mixin breakpoint-xl {
  @media (min-width: 1200px) {
    @content;
  }
}

@mixin hover {
  @media (hover: hover) {
    @content;
  }
}

@mixin link-style(
  $color: $light-primary-text,
  $active-color: $accent,
  $hover-color: $light-secondary-text
) {
  color: $color;
  transition: all 0.3s ease-in-out;
  cursor: pointer;

  &.withIcon {
    color: $color;
    display: flex;
    align-items: center;
    gap: 5px;
  }

  &.active {
    color: $accent-secondary;
    padding: 5px 10px;
    border-radius: 10px;
    background-color: #6985ff51;
  }

  &.withBackground,
  &.outlineBorder {
    color: #ffffff;
    background-color: $accent;
    border-radius: 10px;
    padding: 7px 15px;
  }

  &.outlineBorder {
    background-color: transparent;
    border: solid 1px $accent-secondary;
    color: $accent-secondary;
  }

  @include hover {
    &:hover {
      color: $accent;
      border-radius: 10px;
      background-color: #919bcb51;

      &.withBackground,
      &.outlineBorder {
        color: #ffffff;
        background-color: $accent-hover;
      }

      &.outlineBorder {
        background-color: $accent-secondary;
      }
    }
  }
}

@mixin responsive-font(
  $min-size,
  $max-size,
  $unit: 'rem',
  $min-vw: $min-width,
  $max-vw: $max-width
) {
  $min-wt: strip-units($min-vw);
  $max-wt: strip-units($max-vw);

  @if $unit == 'rem' {
    font-size: calc(
      #{toRem($min-size)} +
        (#{$max-size} - #{$min-size}) *
        ((100vw - #{$min-vw}) / (#{$max-wt} - #{$min-wt}))
    );
  } @else if $unit == 'em' {
    font-size: calc(
      #{toEm($min-size)} +
        (#{$max-size} - #{$min-size}) *
        ((100vw - #{$min-vw}) / (#{$max-wt} - #{$min-wt}))
    );
  } @else if $unit == 'px' {
    font-size: calc(
      #{($min-size)}px +
        (#{$max-size} - #{$min-size}) *
        ((100vw - #{$min-vw}) / (#{$max-wt} - #{$min-wt}))
    );
  } @else {
    @error "Invalid unit specified. Choose 'rem', 'em', or 'px'.";
  }
}

//Responsive Width
@mixin responsive-width(
  $min-width,
  $max-width,
  $min-vw: $min-width,
  $max-vw: $max-width
) {
  width: calc(
    #{$min-width} + (#{$max-width} - #{$min-width}) * ((100vw - #{$min-vw}) /
          (#{$max-vw} - #{$min-vw}))
  );
  max-width: 100%;
}
